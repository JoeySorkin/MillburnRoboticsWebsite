[{"/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/App.tsx":"1","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/reportWebVitals.ts":"2","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/NavElem.tsx":"3","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/NavigationBar.tsx":"4","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/MenuHamburger.tsx":"5","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/Logo.tsx":"6","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/Pages.ts":"7","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/index.tsx":"8"},{"size":217,"mtime":1606517256508,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1606513144289,"results":"11","hashOfConfig":"10"},{"size":809,"mtime":1606524571793,"results":"12","hashOfConfig":"10"},{"size":1744,"mtime":1606521459935,"results":"13","hashOfConfig":"10"},{"size":2202,"mtime":1606524738838,"results":"14","hashOfConfig":"10"},{"size":251,"mtime":1606521373700,"results":"15","hashOfConfig":"10"},{"size":405,"mtime":1606520632432,"results":"16","hashOfConfig":"10"},{"size":500,"mtime":1606513144288,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7jk37s",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/App.tsx",[],"/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/reportWebVitals.ts",[],"/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/NavElem.tsx",["36","37","38","39","40","41","42"],"\n\nimport React from 'react'\nimport {useState} from 'react'\nimport{AppBar, Button, ButtonGroup, Toolbar, Box} from '@material-ui/core/'\nimport Grid from '@material-ui/core/Grid';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n//Interface for PROPS\ninterface NavElemProps{\n    children: string\n}\nconst theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        text: {\n          color: 'white',\n        },\n      },\n    },\n  });\n  \n//RFC\nconst NavElem = (props: NavElemProps) => {\n    //Stylinge\n    const ButtonStyles = {\n        fontSize: 20,\n        padding: \"10px 25px\"\n    }\n    const ButtonFlex = 2;\n    return(\n        <ThemeProvider theme={theme}>\n        <Button style={ButtonStyles}>{props.children}</Button>\n        </ThemeProvider>\n    )\n}\nexport default NavElem;","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/NavigationBar.tsx",["43","44","45","46","47","48","49"],"/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/MenuHamburger.tsx",["50","51"],"// import React from 'react'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n//Pages interface \nimport { PagesArr, Page } from './Pages';\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {PagesArr.map(({name: text}, index) => (\n          <ListItem button>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment key={'left'}>\n          <Button onClick={toggleDrawer('left', true)}>\n              <MenuIcon style={{fontSize: 40, color: \"white\"}}/>\n            </Button>\n          <SwipeableDrawer\n            anchor={'left'}\n            open={state['left']}\n            onClose={toggleDrawer('left', false)}\n            onOpen={toggleDrawer('left', true)}\n          >\n            {list('left')}\n          </SwipeableDrawer>\n        </React.Fragment>\n    </div>\n  );\n}","/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/Logo.tsx",["52"],"/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/Components/NavigationBar/Pages.ts",[],"/Users/joeysorkin/Desktop/Big Folder o' Programming.nosync/vex/MillburnRoboticsWebsite/millburnrobotics-site/src/index.tsx",[],{"ruleId":"53","severity":1,"message":"54","line":4,"column":9,"nodeType":"55","messageId":"56","endLine":4,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":14},{"ruleId":"53","severity":1,"message":"58","line":5,"column":24,"nodeType":"55","messageId":"56","endLine":5,"endColumn":35},{"ruleId":"53","severity":1,"message":"59","line":5,"column":37,"nodeType":"55","messageId":"56","endLine":5,"endColumn":44},{"ruleId":"53","severity":1,"message":"60","line":5,"column":46,"nodeType":"55","messageId":"56","endLine":5,"endColumn":49},{"ruleId":"53","severity":1,"message":"61","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":12},{"ruleId":"53","severity":1,"message":"62","line":29,"column":11,"nodeType":"55","messageId":"56","endLine":29,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":3,"column":9,"nodeType":"55","messageId":"56","endLine":3,"endColumn":17},{"ruleId":"53","severity":1,"message":"63","line":4,"column":24,"nodeType":"55","messageId":"56","endLine":4,"endColumn":30},{"ruleId":"53","severity":1,"message":"58","line":4,"column":32,"nodeType":"55","messageId":"56","endLine":4,"endColumn":43},{"ruleId":"53","severity":1,"message":"60","line":4,"column":54,"nodeType":"55","messageId":"56","endLine":4,"endColumn":57},{"ruleId":"53","severity":1,"message":"64","line":4,"column":59,"nodeType":"55","messageId":"56","endLine":4,"endColumn":69},{"ruleId":"53","severity":1,"message":"61","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":12},{"ruleId":"53","severity":1,"message":"65","line":10,"column":20,"nodeType":"55","messageId":"56","endLine":10,"endColumn":24},{"ruleId":"53","severity":1,"message":"66","line":9,"column":8,"nodeType":"55","messageId":"56","endLine":9,"endColumn":15},{"ruleId":"53","severity":1,"message":"65","line":16,"column":20,"nodeType":"55","messageId":"56","endLine":16,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":6,"column":13,"nodeType":"69","endLine":6,"endColumn":99},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'ButtonGroup' is defined but never used.","'Toolbar' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'ButtonFlex' is assigned a value but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'Page' is defined but never used.","'Divider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]